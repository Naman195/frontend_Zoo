const zooformData = ref({ 
  zooName: "",
  address: {
    street: "",
    zipCode: "",
    city: {
      cityId: null,
      state: {
        stateId: null,
        country: {
          countryId: null,
        },
      },
    },
  },
  image: null, // For the image file
});


<form @submit.prevent="addZoo">
  <!-- Zoo Name Input -->
  <input v-model="zooformData.zooName" placeholder="Zoo Name" />

  <!-- Street Address -->
  <input v-model="zooformData.address.street" placeholder="Street" />

  <!-- Zip Code -->
  <input v-model="zooformData.address.zipCode" placeholder="Zip Code" />

  <!-- City Selection -->
  <input v-model="zooformData.address.city.cityId" placeholder="City ID" />

  <!-- Image Upload -->
  <input type="file" @change="handleFileUpload" />

  <button type="submit">Add Zoo</button>
</form>


const handleFileUpload = (event) => {
  const file = event.target.files[0];
  if (file) {
    zooformData.value.image = file;
  }
};




const addZoo = async () => {
  try {
    const formData = new FormData();

    // Append JSON fields to FormData
    formData.append(
      "zoo",
      JSON.stringify({
        zooName: zooformData.value.zooName,
        address: {
          street: zooformData.value.address.street,
          zipCode: zooformData.value.address.zipCode,
          city: {
            cityId: zooformData.value.address.city.cityId,
          },
        },
      })
    );

    // Append the image file
    if (zooformData.value.image) {
      formData.append("file", zooformData.value.image);
    }

    // Make the API call
    const response = await useCustomFetch(`/zoo/add`, {
      method: "POST",
      body: formData, // Send FormData
      headers: {
        "Content-Type": "multipart/form-data", // Explicitly required in some setups
      },
    });

    // Reset form and show toast
    openModal.value = false;
    intiliazeFormData();
    toastMessage.value = response;
    isToastVisible.value = true;
    fetchZoo(currentPage.value, pageSize.value);
  } catch (error) {
    console.error("Error while adding zoo:", error);
    toastMessage.value = error;
    isToastVisible.value = true;
  }
};




const addZoo = async () => {
  const formData = new FormData();

  formData.append("zooName", updatedformData.value.zooName);
  formData.append("address.street", updatedformData.value.address.street);
  formData.append("address.zipCode", updatedformData.value.address.zipCode);
  formData.append("address.city.cityId", updatedformData.value.address.city.cityId);
  
  if (updatedformData.value.image) {
    formData.append("image", updatedformData.value.image); // Append the image
  }

  try {
    const response = await useCustomFetch(`/zoo/add`, {
      method: "POST",
      body: formData,
    });
    openModal.value = false;
    intiliazeFormData();
    toastMessage.value = response;
    isToastVisible.value = true;
    fetchZoo(currentPage.value, pageSize.value);
  } catch (error) {
    toastMessage.value = error;
    isToastVisible.value = true;
  }
};











try {
  const formData = new FormData();

  // Append JSON fields to FormData
  formData.append(
    "zoo",
    JSON.stringify({
      zooName: zooformData.value.zooName,
      address: {
        street: zooformData.value.address.street,
        zipCode: zooformData.value.address.zipCode,
        city: {
          cityId: zooformData.value.address.city.cityId,
        },
      },
    })
  );

  // Append the image file if it exists
  if (zooformData.value.image) {
    formData.append("file", zooformData.value.image);
  }

  // Make the API call
  const response = await useCustomFetch(`/zoo/add`, {
    method: "POST",
    body: formData, // Send FormData
    // No need to set the Content-Type manually; it will be set automatically
  });

  // Reset form and show success message
  openModal.value = false;
  intiliazeFormData(); // Reset the form
  toastMessage.value = response; // Show success toast
  isToastVisible.value = true;

  // Fetch updated list of zoos
  fetchZoo(currentPage.value, pageSize.value);
} catch (error) {
  console.error("Error while adding zoo:", error);
  toastMessage.value = error.message || "An error occurred";
  isToastVisible.value = true;
}
